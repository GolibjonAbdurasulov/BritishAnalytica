// <auto-generated />
using System;
using DatabaseBroker;
using Entity.Models.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DatabaseBroker.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.AboutBusinessModel.AboutBusinessModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("About")
                        .HasColumnType("jsonb")
                        .HasColumnName("about");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("imageId");

                    b.Property<MultiLanguageField>("MiniTitle")
                        .HasColumnType("jsonb")
                        .HasColumnName("mini_title");

                    b.Property<MultiLanguageField>("Title")
                        .HasColumnType("jsonb")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("about_business");
                });

            modelBuilder.Entity("Entity.Models.FaqQuestion.FaqQuestions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("Answer")
                        .HasColumnType("jsonb")
                        .HasColumnName("answer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<MultiLanguageField>("Question")
                        .HasColumnType("jsonb")
                        .HasColumnName("question");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("faq_questions");
                });

            modelBuilder.Entity("Entity.Models.File.FileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ContentType")
                        .HasColumnType("text")
                        .HasColumnName("content_type");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("Path")
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("file_model");
                });

            modelBuilder.Entity("Entity.Models.HomeModel.HomeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.Property<MultiLanguageField>("Text")
                        .HasColumnType("jsonb")
                        .HasColumnName("body");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("home_model");
                });

            modelBuilder.Entity("Entity.Models.MessageModel.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsRead")
                        .HasColumnType("boolean")
                        .HasColumnName("is_read");

                    b.Property<string>("MessageText")
                        .HasColumnType("text")
                        .HasColumnName("message_text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("text")
                        .HasColumnName("sender_email");

                    b.Property<string>("SenderFirstName")
                        .HasColumnType("text")
                        .HasColumnName("sender_first_name");

                    b.Property<string>("SenderLastName")
                        .HasColumnType("text")
                        .HasColumnName("sender_last_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("Entity.Models.OurService.OurService", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("AboutService")
                        .HasColumnType("jsonb")
                        .HasColumnName("about_service");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<MultiLanguageField>("ServiceName")
                        .HasColumnType("jsonb")
                        .HasColumnName("service_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("our_services");
                });

            modelBuilder.Entity("Entity.Models.OurServices.OurValues", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<MultiLanguageField>("AboutValue")
                        .HasColumnType("jsonb")
                        .HasColumnName("about_value");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<MultiLanguageField>("ValueName")
                        .HasColumnType("jsonb")
                        .HasColumnName("value_name");

                    b.HasKey("Id");

                    b.ToTable("our_values");
                });

            modelBuilder.Entity("Entity.Models.ReasonModel.Reason", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("AboutBusinessModelId")
                        .HasColumnType("bigint");

                    b.Property<MultiLanguageField>("Text")
                        .HasColumnType("jsonb")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("AboutBusinessModelId");

                    b.ToTable("reasons");
                });

            modelBuilder.Entity("Entity.Models.Skills.Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("TeamMemberId")
                        .HasColumnType("bigint")
                        .HasColumnName("team_member_id");

                    b.Property<MultiLanguageField>("Text")
                        .HasColumnType("jsonb")
                        .HasColumnName("text");

                    b.HasKey("Id");

                    b.HasIndex("TeamMemberId");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("Entity.Models.TeamMember.TeamMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uuid")
                        .HasColumnName("image_id");

                    b.Property<MultiLanguageField>("Role")
                        .HasColumnType("jsonb")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("team_members");
                });

            modelBuilder.Entity("Entity.Models.Translation.Translation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("En")
                        .HasColumnType("text")
                        .HasColumnName("en")
                        .HasAnnotation("Relational:JsonPropertyName", "en");

                    b.Property<string>("Ru")
                        .HasColumnType("text")
                        .HasColumnName("ru")
                        .HasAnnotation("Relational:JsonPropertyName", "ru");

                    b.Property<string>("Uz")
                        .HasColumnType("text")
                        .HasColumnName("uz")
                        .HasAnnotation("Relational:JsonPropertyName", "uz");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("translations");
                });

            modelBuilder.Entity("Entity.Models.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsSigned")
                        .HasColumnType("boolean")
                        .HasColumnName("IsSigned");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Entity.Models.ReasonModel.Reason", b =>
                {
                    b.HasOne("Entity.Models.AboutBusinessModel.AboutBusinessModel", null)
                        .WithMany("Reasons")
                        .HasForeignKey("AboutBusinessModelId");
                });

            modelBuilder.Entity("Entity.Models.Skills.Skill", b =>
                {
                    b.HasOne("Entity.Models.TeamMember.TeamMember", "TeamMember")
                        .WithMany("Skills")
                        .HasForeignKey("TeamMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeamMember");
                });

            modelBuilder.Entity("Entity.Models.AboutBusinessModel.AboutBusinessModel", b =>
                {
                    b.Navigation("Reasons");
                });

            modelBuilder.Entity("Entity.Models.TeamMember.TeamMember", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
